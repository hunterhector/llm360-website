# This workflow builds your Jekyll site and deploys it to GitHub Pages.
# It handles both the main site deployment (from 'main' branch)
# and temporary Pull Request preview deployments.

name: Jekyll Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on pushes to the main branch (for main site deployment)
  push:
    branches:
      - main
  # Triggers the workflow on pull request events (for PR previews)
  pull_request:
    branches:
      - main # PRs targeting the main branch
  # Allows you to run this workflow manually from the Actions tab in GitHub.
  workflow_dispatch:
    inputs:
      target_ref:
        description: 'Branch name (e.g., feature/my-branch) or PR number (e.g., 123) to build/deploy. Leave empty to use the current branch.'
        required: false
        type: string

# Define jobs
jobs:
  # Job to perform the build and deploy
  deploy_site:
    runs-on: ubuntu-latest

    permissions:
      contents: read # Allows checking out code
      pages: write   # Allows deploying to GitHub Pages
      id-token: write # Required for OIDC authentication with GitHub Pages

    environment:
      name: github-pages # The default environment for GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }} # Output URL of the deployed site

    steps:
      - name: Determine Ref for Checkout
        id: determine_ref
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "CHECKOUT_REF=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "CHECKOUT_REF=${{ github.ref }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            INPUT_REF="${{ github.event.inputs.target_ref }}"
            if [[ -z "$INPUT_REF" ]]; then
              echo "CHECKOUT_REF=${{ github.ref }}" >> $GITHUB_OUTPUT
            elif [[ "$INPUT_REF" =~ ^[0-9]+$ ]]; then
              echo "CHECKOUT_REF=refs/pull/${INPUT_REF}/merge" >> $GITHUB_OUTPUT
            else
              echo "CHECKOUT_REF=refs/heads/${INPUT_REF}" >> $GITHUB_OUTPUT
            fi
          fi
          echo "Determined checkout ref: ${{ steps.determine_ref.outputs.CHECKOUT_REF }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.determine_ref.outputs.CHECKOUT_REF }}
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Install Jekyll dependencies
        run: bundle install

      - name: Setup Pages
        id: pages_setup
        uses: actions/configure-pages@v3

      - name: Build Jekyll site
        # Standard Jekyll build command.
        # GitHub Pages automatically sets site.url and site.baseurl based on repo settings
        # when these are NOT explicitly set in _config.yml.
        # The --baseurl argument is provided by configure-pages action for project pages.
        run: bundle exec jekyll build --trace --baseurl "${{ steps.pages_setup.outputs.base_url }}"
        env:
          JEKYLL_ENV: production # Keep this for environment-specific Liquid logic

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
